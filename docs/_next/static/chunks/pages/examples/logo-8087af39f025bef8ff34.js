(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[372],{5346:function(e,n,t){"use strict";var a=t(5893);n.Z=function(e){var n=e.src;return(0,a.jsx)("div",{style:{position:"relative",paddingBottom:"56.25%"},children:(0,a.jsx)("iframe",{src:n,width:"100%",height:"100%",style:{width:"100%",height:"100%",position:"absolute",left:0,top:0},frameBorder:"0"})})}},2802:function(e,n,t){"use strict";var a=t(5893);n.Z={github:"https://github.com/manim-web/manim-web",docsRepositoryBase:"https://github.com/manim-web/manim-web.github.io/blob/master",titleSuffix:" - Manim Web",nextLinks:!0,prevLinks:!0,search:!0,customSearch:null,darkMode:!0,footer:!0,footerText:"MIT ".concat((new Date).getFullYear()," \xa9 Hugo SALOU."),footerEditLink:"Edit this page on GitHub",logo:(0,a.jsx)("span",{children:"Manim Web: Mathematical Animation Engine, for the web"}),head:(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)("meta",{name:"viewport",content:"width=device-width, initial-scale=1.0"}),(0,a.jsx)("meta",{name:"description",content:"Manim Web: Mathematical Animation Engine, for the web"}),(0,a.jsx)("meta",{name:"og:title",content:"Manim Web: Mathematical Animation Engine, for the web"}),(0,a.jsx)("meta",{name:"google-site-verification",content:"J7lM49tFJ8e1d0Qte2uweuO9VkJgRIJ0SKyg89qfO-A"})]})}},8548:function(e,n,t){"use strict";t.r(n);var a=t(5893),r=t(7829),o=t.n(r),i=t(3805),s=t(2802),l=t(5346),c=function(e){return(0,i.withSSG)(o()({filename:"logo.mdx",route:"/examples/logo",meta:{},pageMap:[{name:"api-reference",route:"/api-reference"},{name:"blog",children:[{name:"2022-goals",route:"/blog/2022-goals"},{name:"meta.json",meta:{"2022-goals":"Goals for 2022"}}],route:"/blog"},{name:"examples",children:[{name:"fourier-transform",route:"/examples/fourier-transform"},{name:"index",route:"/examples"},{name:"logo",route:"/examples/logo"},{name:"matrix-transformation",route:"/examples/matrix-transformation"},{name:"meta.json",meta:{index:"All examples","square-to-circle":"Square to Circle","complex-exponential":"Complex Exponential","fourier-transform":"Fourier Transform",logo:"Logo","matrix-transformation":"Matrix Transformation"}},{name:"square-to-circle",route:"/examples/square-to-circle"}],route:"/examples"},{name:"getting-started",route:"/getting-started"},{name:"index",route:"/"},{name:"meta.json",meta:{index:"Introduction","getting-started":"Getting Started","api-reference":"API Reference",examples:"Examples"}}]},s.Z))(e)};n.default=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return c?(0,a.jsx)(c,Object.assign({},e,{children:(0,a.jsx)(n,{})})):n();function n(){var n=Object.assign({h1:"h1",pre:"pre",code:"code"},e.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{children:"Logo example"}),"\n",(0,a.jsx)(l.Z,{src:"/example/logo.html"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-dart",children:"import 'package:manim_web/manim.dart';\n\nclass LogoScene extends Scene {\n  late Axes axes;\n  late ParametricFunction graph;\n  late Line tangentLine;\n\n  double func(double x) => 0.1 * (x + 3 - 5) * (x - 3 - 5) * (x - 5) + 5;\n\n  var a = 1.5;\n  var b = 3.5;\n\n  @override\n  FutureOr<void> preload() {\n    MathTex.preload('x');\n    MathTex.preload('y');\n    MathTex.preload('a');\n    MathTex.preload('b');\n    MathTex.preload('f(a)');\n    MathTex.preload('f(b)');\n    Tex.preload('Manim');\n    Tex.preload('web');\n    Tex.preload('Mathematical Animation Engine');\n    Tex.preload('for the web');\n  }\n\n  @override\n  Future construct() async {\n    createGraph();\n    addTangent();\n    addRectangles();\n    addText();\n    Group(mobjects).shift(UP);\n\n    // when rendering the logo, uncomment this:\n    // camera.resetPixelShape(3840, 2160);\n\n    // when rendering the github repository logo, uncomment these lines:\n    // camera.resetPixelShape(1280, 640);\n    // Group(mobjects).scaleUniformly(0.8); // scale everything\n    // mobjects.whereType<VMobject>().forEach(\n    //     (vmob) => vmob.strokeWidth *= 0.8); // scale vmobjects (strokeWidth)\n  }\n\n  void createGraph() {\n    axes = Axes(\n        xMin: -1,\n        xMax: 10,\n        yMin: -1,\n        yMax: 8,\n        axisConfig: AxisConfig(includeTip: false),\n        yAxisConfig: AxisConfig(unitSize: 0.7))\n      ..scaleUniformly(0.58)\n      ..centerOnYAxis()\n      ..toEdge(edge: LEFT, buffer: MED_SMALL_BUFFER);\n\n    graph = axes.getGraph(func, xMin: 0.2, xMax: 9)\n      ..setStroke(color: Color.FromHex('#68a8e1'));\n\n    var x = MathTex('x')\n      ..nextToPoint(axes.c2p(RIGHT * 10),\n          direction: DOWN, buffer: MED_SMALL_BUFFER)\n      ..scaleUniformly(0.9);\n    var y = MathTex('y')\n      ..nextToPoint(axes.c2p(UP * 8), direction: LEFT, buffer: MED_SMALL_BUFFER)\n      ..scaleUniformly(0.9);\n\n    add([x, y, graph, axes]);\n  }\n\n  void addTangent() {\n    var _fA = func(a);\n    var _fB = func(b);\n\n    var ptA = axes.c2p(Vector3(a, _fA, 0));\n    var ptB = axes.c2p(Vector3(b, _fB, 0));\n\n    tangentLine = Line(start: ptA, end: ptB)\n      ..scaleUniformly(4)\n      ..setColor(color: RED_C);\n\n    var dotA = Dot(ptA)..scaleUniformly(0.6);\n    var dotB = Dot(ptB)..scaleUniformly(0.6);\n    var origin = axes.c2p(ORIGIN);\n\n    var fA = MathTex('f(a)')\n      ..scaleUniformly(0.6)\n      ..nextToPoint(Vector3(origin.x, ptA.y, 0),\n          direction: LEFT, buffer: MED_SMALL_BUFFER);\n    var fB = MathTex('f(b)')\n      ..scaleUniformly(0.6)\n      ..nextToPoint(Vector3(origin.x, ptB.y, 0),\n          direction: LEFT, buffer: MED_SMALL_BUFFER);\n    var fATriangle = Triangle()\n      ..scaleUniformly(0.05)\n      ..rotate(90 * DEGREES)\n      ..nextToPoint(Vector3(origin.x, ptA.y, 0), direction: LEFT)\n      ..shift(RIGHT / 2.5);\n    var fBTriangle = Triangle()\n      ..scaleUniformly(0.05)\n      ..rotate(90 * DEGREES)\n      ..nextToPoint(Vector3(origin.x, ptB.y, 0), direction: LEFT)\n      ..shift(RIGHT / 2.5);\n    var dashedLinefA = DashedLine(start: fATriangle.getCenter(), end: ptA)\n      ..setStroke(width: 2);\n    var dashedLinefB = DashedLine(start: fBTriangle.getCenter(), end: ptB)\n      ..setStroke(width: 2);\n\n    var texA = MathTex('a')\n      ..scaleUniformly(0.6)\n      ..nextToPoint(Vector3(ptA.x, origin.y, 0),\n          direction: DOWN, buffer: MED_SMALL_BUFFER);\n    var texB = MathTex('b')\n      ..scaleUniformly(0.6)\n      ..nextToPoint(Vector3(ptB.x, origin.y, 0),\n          direction: DOWN, buffer: MED_SMALL_BUFFER);\n    var aTriangle = Triangle()\n      ..scaleUniformly(0.05)\n      ..nextToPoint(Vector3(ptA.x, origin.y, 0), direction: DOWN)\n      ..shift(UP / 2.5);\n    var bTriangle = Triangle()\n      ..scaleUniformly(0.05)\n      ..nextToPoint(Vector3(ptB.x, origin.y, 0), direction: DOWN)\n      ..shift(UP / 2.5);\n    var dashedLineA = DashedLine(start: aTriangle.getCenter(), end: ptA)\n      ..setStroke(width: 2);\n    var dashedLineB = DashedLine(start: bTriangle.getCenter(), end: ptB)\n      ..setStroke(width: 2);\n\n    var dx = Line(start: ptA, end: Vector3(ptB.x, ptA.y, 0))\n      ..setColor(color: Color.FromHex('942357'));\n    var df = Line(start: ptB, end: Vector3(ptB.x, ptA.y, 0))\n      ..setColor(color: Color.FromHex('3f7d5c'));\n\n    add([\n      dotA,\n      dotB,\n      dx,\n      df,\n      fA,\n      fB,\n      fATriangle,\n      fBTriangle,\n      dashedLinefA,\n      dashedLinefB,\n      tangentLine,\n      texA,\n      texB,\n      aTriangle,\n      bTriangle,\n      dashedLineA,\n      dashedLineB,\n    ]);\n  }\n\n  void addRectangles() {\n    var count = 10;\n    var xs = linspace(start: 4, end: 8.5, count: count).getColumn(0);\n    var dx = xs[1] - xs[0];\n    var colors = colorGradient([PURPLE_C, ORANGE], count);\n    var origin = axes.c2p(ORIGIN);\n\n    for (var i in range(end: count)) {\n      var x = xs[i];\n      var color = colors[i];\n\n      var topLeft = axes.c2p(Vector3(x, func(x), 0));\n      var bottomRight = axes.c2p(Vector3(x + dx, 0, 0));\n      var center = (topLeft + bottomRight) / 2;\n\n      var height = topLeft.y - origin.y;\n      var width = bottomRight.x - topLeft.x;\n\n      var rectangle = Rectangle(\n        height: height,\n        width: width,\n      )\n        ..setFill(color: color.withTransparency(0.7))\n        ..setStroke(width: 1, color: BLACK)\n        ..moveToPoint(center);\n      add([rectangle]);\n    }\n  }\n\n  void addText() {\n    var manim = Tex('Manim')\n      ..scaleUniformly(5.5)\n      ..shift(RIGHT * 2.8 + DOWN / 2);\n    var web = Tex('web')\n      ..scaleUniformly(2.8)\n      ..shift(RIGHT * 6.2 + DOWN * 1.3);\n    var subtitle = Tex('Mathematical Animation Engine')\n      ..scaleUniformly(2.5)\n      ..toEdge(edge: DOWN, buffer: MED_LARGE_BUFFER);\n    var subtitle2 = Tex('for the web')\n      ..scaleUniformly(1.8)\n      ..toEdge(edge: DOWN, buffer: SMALL_BUFFER);\n\n    add([manim, web, subtitle, subtitle2]);\n  }\n}\n"})})]})}}},7983:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/examples/logo",function(){return t(8548)}])}},function(e){e.O(0,[511,774,888,179],(function(){return n=7983,e(e.s=n);var n}));var n=e.O();_N_E=n}]);